{
  "compilerOptions": {
    "allowJs": false,
    "baseUrl": ".",
    "declaration": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "importHelpers": true,
    "lib": ["esnext"],
    "module": "esnext",
    "moduleResolution": "node",
    "noEmit": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": false,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "rootDir": ".",
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    "paths": {
      "anyone": ["./packages/anyone/src/anyone.ts"],
      "all": ["./packages/anyone/src/exports/all.ts"],
      "any": ["./packages/anyone/src/exports/any.ts"],
      "none": ["./packages/anyone/src/exports/none.ts"],
      "one": ["./packages/anyone/src/exports/one.ts"],
      "runAnyoneMethods": ["./packages/anyone/src/runner/runAnyoneMethods.ts"],
      "context": ["./packages/context/src/context.ts"],
      "allOf": ["./packages/n4s/src/compounds/allOf.ts"],
      "anyOf": ["./packages/n4s/src/compounds/anyOf.ts"],
      "compounds": ["./packages/n4s/src/compounds/compounds.ts"],
      "noneOf": ["./packages/n4s/src/compounds/noneOf.ts"],
      "oneOf": ["./packages/n4s/src/compounds/oneOf.ts"],
      "optional": ["./packages/n4s/src/compounds/optional.ts"],
      "eachEnforceRule": ["./packages/n4s/src/lib/eachEnforceRule.ts"],
      "isProxySupported": ["./packages/n4s/src/lib/isProxySupported.ts"],
      "ruleReturn": ["./packages/n4s/src/lib/ruleReturn.ts"],
      "runLazyRule": ["./packages/n4s/src/lib/runLazyRule.ts"],
      "transformResult": ["./packages/n4s/src/lib/transformResult.ts"],
      "modifiers": ["./packages/n4s/src/modifiers/modifiers.ts"],
      "partial": ["./packages/n4s/src/modifiers/partial.ts"],
      "n4s": ["./packages/n4s/src/n4s.ts"],
      "endsWith": ["./packages/n4s/src/rules/endsWith.ts"],
      "equals": ["./packages/n4s/src/rules/equals.ts"],
      "greaterThan": ["./packages/n4s/src/rules/greaterThan.ts"],
      "greaterThanOrEquals": [
        "./packages/n4s/src/rules/greaterThanOrEquals.ts"
      ],
      "inside": ["./packages/n4s/src/rules/inside.ts"],
      "isArrayValue": ["./packages/n4s/src/rules/isArrayValue.ts"],
      "isBetween": ["./packages/n4s/src/rules/isBetween.ts"],
      "isBoolean": ["./packages/n4s/src/rules/isBoolean.ts"],
      "isEmpty": ["./packages/n4s/src/rules/isEmpty.ts"],
      "isEven": ["./packages/n4s/src/rules/isEven.ts"],
      "isNaN": ["./packages/n4s/src/rules/isNaN.ts"],
      "isNegative": ["./packages/n4s/src/rules/isNegative.ts"],
      "isNull": ["./packages/n4s/src/rules/isNull.ts"],
      "isNumber": ["./packages/n4s/src/rules/isNumber.ts"],
      "isNumeric": ["./packages/n4s/src/rules/isNumeric.ts"],
      "isOdd": ["./packages/n4s/src/rules/isOdd.ts"],
      "isString": ["./packages/n4s/src/rules/isString.ts"],
      "isTruthy": ["./packages/n4s/src/rules/isTruthy.ts"],
      "isUndefined": ["./packages/n4s/src/rules/isUndefined.ts"],
      "lengthEquals": ["./packages/n4s/src/rules/lengthEquals.ts"],
      "lessThan": ["./packages/n4s/src/rules/lessThan.ts"],
      "lessThanOrEquals": ["./packages/n4s/src/rules/lessThanOrEquals.ts"],
      "longerThan": ["./packages/n4s/src/rules/longerThan.ts"],
      "longerThanOrEquals": ["./packages/n4s/src/rules/longerThanOrEquals.ts"],
      "matches": ["./packages/n4s/src/rules/matches.ts"],
      "numberEquals": ["./packages/n4s/src/rules/numberEquals.ts"],
      "ruleCondition": ["./packages/n4s/src/rules/ruleCondition.ts"],
      "shorterThan": ["./packages/n4s/src/rules/shorterThan.ts"],
      "shorterThanOrEquals": [
        "./packages/n4s/src/rules/shorterThanOrEquals.ts"
      ],
      "startsWith": ["./packages/n4s/src/rules/startsWith.ts"],
      "enforce": ["./packages/n4s/src/runtime/enforce.ts"],
      "enforceContext": ["./packages/n4s/src/runtime/enforceContext.ts"],
      "enforceEager": ["./packages/n4s/src/runtime/enforceEager.ts"],
      "genEnforceLazy": ["./packages/n4s/src/runtime/genEnforceLazy.ts"],
      "rules": ["./packages/n4s/src/runtime/rules.ts"],
      "runtimeRules": ["./packages/n4s/src/runtime/runtimeRules.ts"],
      "isArrayOf": ["./packages/n4s/src/schema/isArrayOf.ts"],
      "loose": ["./packages/n4s/src/schema/loose.ts"],
      "schema": ["./packages/n4s/src/schema/schema.ts"],
      "shape": ["./packages/n4s/src/schema/shape.ts"],
      "asArray": ["./packages/shared/src/asArray.ts"],
      "assign": ["./packages/shared/src/assign.ts"],
      "bindNot": ["./packages/shared/src/bindNot.ts"],
      "cache": ["./packages/shared/src/cache.ts"],
      "callEach": ["./packages/shared/src/callEach.ts"],
      "defaultTo": ["./packages/shared/src/defaultTo.ts"],
      "either": ["./packages/shared/src/either.ts"],
      "genId": ["./packages/shared/src/genId.ts"],
      "globals.d": ["./packages/shared/src/globals.d.ts"],
      "hasOwnProperty": ["./packages/shared/src/hasOwnProperty.ts"],
      "isBooleanValue": ["./packages/shared/src/isBooleanValue.ts"],
      "isFunction": ["./packages/shared/src/isFunction.ts"],
      "isPromise": ["./packages/shared/src/isPromise.ts"],
      "isStringValue": ["./packages/shared/src/isStringValue.ts"],
      "mapFirst": ["./packages/shared/src/mapFirst.ts"],
      "optionalFunctionValue": [
        "./packages/shared/src/optionalFunctionValue.ts"
      ],
      "partition": ["./packages/shared/src/partition.ts"],
      "removeElementFromArray": [
        "./packages/shared/src/removeElementFromArray.ts"
      ],
      "throwError": ["./packages/shared/src/throwError.ts"],
      "utilityTypes": ["./packages/shared/src/utilityTypes.ts"],
      "vast": ["./packages/vast/src/vast.ts"],
      "ctx": ["./packages/vest/src/core/ctx.ts"],
      "createStateRef": ["./packages/vest/src/core/state/createStateRef.ts"],
      "stateHooks": ["./packages/vest/src/core/state/stateHooks.ts"],
      "create": ["./packages/vest/src/core/suite/create.ts"],
      "hasRemainingTests": [
        "./packages/vest/src/core/suite/hasRemainingTests.ts"
      ],
      "isSameProfileTest": [
        "./packages/vest/src/core/test/isSameProfileTest.ts"
      ],
      "cancelOverriddenPendingTest": [
        "./packages/vest/src/core/test/lib/cancelOverriddenPendingTest.ts"
      ],
      "registerTest": ["./packages/vest/src/core/test/lib/registerTest.ts"],
      "removeTestFromState": [
        "./packages/vest/src/core/test/lib/removeTestFromState.ts"
      ],
      "shouldUseErrorAsMessage": [
        "./packages/vest/src/core/test/lib/shouldUseErrorAsMessage.ts"
      ],
      "runAsyncTest": ["./packages/vest/src/core/test/runAsyncTest.ts"],
      "runSyncTest": ["./packages/vest/src/core/test/runSyncTest.ts"],
      "test.each": ["./packages/vest/src/core/test/test.each.ts"],
      "test.memo": ["./packages/vest/src/core/test/test.memo.ts"],
      "test": ["./packages/vest/src/core/test/test.ts"],
      "VestTest": ["./packages/vest/src/core/test/VestTest.ts"],
      "classnames": ["./packages/vest/src/exports/classnames.ts"],
      "parser": ["./packages/vest/src/exports/parser.ts"],
      "promisify": ["./packages/vest/src/exports/promisify.ts"],
      "exclusive": ["./packages/vest/src/hooks/exclusive.ts"],
      "group": ["./packages/vest/src/hooks/group.ts"],
      "hookErrors": ["./packages/vest/src/hooks/hookErrors.ts"],
      "hooks": ["./packages/vest/src/hooks/hooks.ts"],
      "optionalTests": ["./packages/vest/src/hooks/optionalTests.ts"],
      "skipWhen": ["./packages/vest/src/hooks/skipWhen.ts"],
      "warn": ["./packages/vest/src/hooks/warn.ts"],
      "genTestsSummary": ["./packages/vest/src/produce/genTestsSummary.ts"],
      "collectFailureMessages": [
        "./packages/vest/src/produce/getFailures/collectFailureMessages.ts"
      ],
      "getFailures": ["./packages/vest/src/produce/getFailures/getFailures.ts"],
      "getFailuresByGroup": [
        "./packages/vest/src/produce/getFailures/getFailuresByGroup.ts"
      ],
      "hasFailures": ["./packages/vest/src/produce/hasFailures/hasFailures.ts"],
      "hasFailuresByGroup": [
        "./packages/vest/src/produce/hasFailures/hasFailuresByGroup.ts"
      ],
      "hasFailuresLogic": [
        "./packages/vest/src/produce/hasFailures/hasFailuresLogic.ts"
      ],
      "isValid": ["./packages/vest/src/produce/isValid.ts"],
      "matchingFieldName": ["./packages/vest/src/produce/matchingFieldName.ts"],
      "nonMatchingSeverityProfile": [
        "./packages/vest/src/produce/nonMatchingSeverityProfile.ts"
      ],
      "produce": ["./packages/vest/src/produce/produce.ts"],
      "produceDraft": ["./packages/vest/src/produce/produceDraft.ts"],
      "vest": ["./packages/vest/src/vest.ts"],
      "vestTypes": ["./packages/vest/src/vestTypes.ts"]
    }
  },
  "files": ["./config/jest/globals.d.ts"],
  "include": ["./packages/*/src/**/*.ts"]
}
